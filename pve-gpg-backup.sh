#!/bin/bash

# pve-gpg-backup.sh
# https://github.com/PiDroid-B/pve-gpg-backup
# Version : 1.0.0
# Copyright 2019 PiDroid-B All rights reserved.
# Use of this source code is governed by a GPL v3

# Usage :
#	must be set in /etc/vzdump.conf
#	echo "script: /my/path/pve-gpg-backup.sh" >> /etc/vzdump.conf
#
# You have to modify the part "const" below and generate your own gpg keys

#----------------------------
# doc
#----------------------------
#
# GPG : to manage gpg files generated by this script :
# - check entropy on your machine
#	cat /proc/sys/kernel/random/entropy_avail
#	if lighter than 3000 choose another machine to generate your keys
# - create keys
# 	gpg --full-gen-key
# - export pub/priv keys and stock it to be able to decrypt
#	gpg --armor --output <pubkey filename> --export '<key name>'
#	gpg --armor --output <privkey filename> --export-secret-key '<key name>'
# - remove priv-key
#	gpg --delete-secret-keys <name>
#
# when you need to extract gpg file
#	gpg --import <privkey filename>
# decrypt
#	gpg --decrypt <in>.gpg
#
# sha512sum :
#	generated on the gpg files
#	to check integrity of files through multiple transfert

#----------------------------
# const
#----------------------------

# name of your key gpg
GPG_KEYNAME="your_key"

# target folder for encrypted backup (original backups still in $DUMPDIR)
STOCKAGE_DST="/mnt/pve/yourpath/"

# Tag in pve logfile
TAG_LOG="pve-gpg-backup"

# Max full backup to keep
NB_MAX_FULL=2
# Max diff backup to keep (require the according full backup)
NB_MAX_DIFF=14

# Tag in filename
TYPE_BACKUP_FULL="FULL"
TYPE_BACKUP_DIFF="DIFF"

# flag NO_DELETE
# 1 : show only backup too old in log (no delete)
# 0 : show and delete old backup
NO_DELETE=1

# don't modify below --------
PHASE="$1"
VMID="$3"

#----------------------------
# script
#----------------------------

#check const
[[ ! -d "$STOCKAGE_DST" ]] && echo "${TAG_LOG} - ERROR : STOCKAGE_DST do not exist" && exit 1
[[ ! "$NB_MAX_FULL" =~ ^[0-9]+$ ]] && echo "${TAG_LOG} - ERROR : NB_MAX_FULL is not a number [$NB_MAX_FULL]" && exit 1
[[ ! "$NB_MAX_DIFF" =~ ^[0-9]+$ ]] && echo "${TAG_LOG} - ERROR : NB_MAX_DIFF is not a number [$NB_MAX_DIFF]" && exit 1

[[ "$NO_DELETE" == "0" ]] && RM_CMD="rm -v" || RM_CMD="echo"

if [ "${PHASE}" == "backup-end" ]; then
	echo "${TAG_LOG} - ${HOSTNAME}"
	echo "${TAG_LOG} - Retention : full(max:${NB_MAX_FULL}) and diff(max:${NB_MAX_DIFF})"
	# init variables
	DIR="$(dirname $TARFILE)/"
	FILE="$(basename $TARFILE)"
	EXT="${TARFILE##*.}"
	FILENAME="${FILE%.*}"
	PROXMOX="$(cat /etc/hostname)"
	BACKUP_DATE="$( echo "${FILENAME}" | awk -F'[-_.]' '{ print $4$5$6"-"$7$8$9 }' )"

	# select the tag according to the type of backup : full or diff
	[[ "$FILENAME" == *"differential"* ]] && TYPE_BACKUP="$TYPE_BACKUP_DIFF" || TYPE_BACKUP="$TYPE_BACKUP_FULL"

	# name of the output files
	OUTPUT="${STOCKAGE_DST}${PROXMOX}-${HOSTNAME}-${VMID}-${BACKUP_DATE}-${TYPE_BACKUP}.gpg"
	SHA="${STOCKAGE_DST}${PROXMOX}-${HOSTNAME}-${VMID}-${BACKUP_DATE}-${TYPE_BACKUP}.gpg.sha512"

	# encryption with public key
	gpg -z 0 --encrypt --recipient ${GPG_KEYNAME} --out "${OUTPUT}" "${TARFILE}"
	echo "${TAG_LOG} - gpg : ${OUTPUT}"

	# sum sha512 for integrity
	sha512sum "${OUTPUT}" > "${SHA}"
	echo "${TAG_LOG} - sha512 : ${SHA}"

	# copy encrypted backup and her sha512sum to target
	rsync -avzP "${OUTPUT}" "${STOCKAGE_DST}"
	rsync -avzP "${SHA}" "${STOCKAGE_DST}"

	# pattern of backup
	FILE_FULL="${STOCKAGE_DST}${PROXMOX}-${HOSTNAME}-${VMID}-*${TYPE_BACKUP_FULL}*.gpg"
	FILE_DIFF="${STOCKAGE_DST}${PROXMOX}-${HOSTNAME}-${VMID}-*${TYPE_BACKUP_DIFF}*.gpg"

	[[ "$NO_DELETE" == "0" ]] && INFO_NO_DELETE="remove" || INFO_NO_DELETE="too old"

	# remove old backup
	COUNT_FULL=$( ls ${FILE_FULL} | wc -l )
	if [[ $NB_MAX_FULL =~ ^-?[0-9]+$ ]] && [[ $COUNT_FULL =~ ^-?[0-9]+$ ]] && [ ${COUNT_FULL} -gt ${NB_MAX_FULL} ]; then
		LIST=$( ls ${FILE_FULL} | head -n $((${COUNT_FULL}-${NB_MAX_FULL})) )
		for file in ${LIST}
		do
			echo "${TAG_LOG} - $INFO_NO_DELETE : $file"
			[[ "$NO_DELETE" == "0" ]] && rm -v $file && rm -v ${file}.sha512
		done
		[[ "$NO_DELETE" == "0" ]] && echo "${TAG_LOG} - $((${COUNT_FULL}-${NB_MAX_FULL})) full backups removed"
	fi

	COUNT_DIFF=$( ls ${FILE_DIFF} | wc -l )
	if [[ $NB_MAX_DIFF =~ ^-?[0-9]+$ ]] && [[ $COUNT_DIFF =~ ^-?[0-9]+$ ]] && [ ${COUNT_DIFF} -gt ${NB_MAX_DIFF} ]; then
		LIST=$( ls ${FILE_DIFF} | head -n $((${COUNT_DIFF}-${NB_MAX_DIFF})) )
		for file in ${LIST}
		do
			echo "${TAG_LOG} - $INFO_NO_DELETE : $file"
			[[ "$NO_DELETE" == "0" ]] && rm -v $file && rm -v ${file}.sha512
		done
		[[ "$NO_DELETE" == "0" ]] && echo "${TAG_LOG} - $((${COUNT_DIFF}-${NB_MAX_DIFF})) diif backups removed"
	fi

	echo "${TAG_LOG} - ${HOSTNAME} done !"
fi


